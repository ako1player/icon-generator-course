import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import { FormGroup } from "~/component/FormGroup";
import { Input } from "~/component/input";
import { api } from "~/utils/api";
import { Button } from "~/component/Button";
import Image from "next/image";

const GeneratePage: NextPage = () => {
 
  const [form, setForm] = useState({
    prompt: "",
  })

  const [imageUrl, setImageUrl] = useState('');

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data){
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    }
  });

  function handleFormSubmit(e: React.FormEvent){
    e.preventDefault();
    // TODO: submit form data to the backend
     generateIcon.mutateAsync({
      prompt: form.prompt,
     })
     setForm({prompt: ""})
  }

  function updateForm(key: string){
    return function(e: React.ChangeEvent<HTMLInputElement>){
      setForm((prev) =>({
        ...prev,
        [key]: e.target.value,
      }))
    }
  }

  const session = useSession();

  const isLoggedIn = !!session.data;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        {!isLoggedIn && (
          <Button onClick={()=> {signIn().catch(console.error)}}>login</Button>
        )}
        {isLoggedIn && (
          <Button onClick={()=> {signOut().catch(console.error)}}>Logout</Button>
        )}
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
            <FormGroup>
                <label>Prompt</label>
                <Input onChange={updateForm("prompt")} value={form.prompt}></Input>
            </FormGroup>
            <button className="bg-blue-400 hover:bg-blue-500 px-4 py-2 rounded">Submit</button>
        </form>
        <Image src={imageUrl}
        alt="an image of your generate prommp"
        width={100}
        height={100}
        />
      </main>
    </>
  );
};

export default GeneratePage;

